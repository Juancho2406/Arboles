<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWkAAACNCAYAAAB12YtuAAAABGdBTUEAALGPC/xhBQAAG19JREFUeF7t
        nXvQVdMbx19ySVKuY8b4zRiX/mBMf+Q+DBXKNQrjXm65jMugEl0micqQ3JIK5W6QRLkVSiiXMBQpIkqS
        ktRQWL8+q71f+z2dc96z19qXtfd+PjNn3s45++y9Ws+zvvtZz7rsOpUm/3p/M0dmC54bvv/+e/XQQw+p
        Sy65RB166KFqt912U1tttZWqq6vTf3nP53zPcRwvNCT/XpyP/2G6Ii0IIUFwjzrqKLXTTjups88+W91/
        //3qnXfeUT/++KP6888/9TH85T2f8z3HcTy/4/dCIxhqm4h+PIhIC5nggQceUHvssYc66aST1AsvvOB9
        Gg5+x+85D+cTCkSG7yAi0oLTzJ49W0fAxx57rI6Mo2D6hvNwPs7L+QUhNWq4eYhIC85CaoIcMymLOOC8
        nF9SIEUlG+G1IyKd/2yWEI5BgwapVq1aqVmzZnmfxAPn5zpcTxBcRCJpwTkQzDZt2ujBvyTgOlxPhFpw
        kQKJdBzRums9gOz3SEg9ENkmJdB+lXE9riupD8E1JJIWnIFBPHLEcac4KsF1ub5zg4mSDSw0ItKCMzDb
        Iq5Bwlrh+pRDEFxBRNqUJKObAkRSzFtmWlw6NKxgylHTPGqJcIUEEJEWNpC+2rDAJKp50LZQDsqTDeRO
        kTzJ1rmItJA6DNaxEtAlvaE8TgwiZkCD5TYRLyLSQuqQAzZd6h0XlEdy04ILiEgLqcLudGx+5CKUy989
        r2jRokTH7iAiLdhj0aJJKbBLXVi++uor1bp1az1ljleHDh3U8uXL9Xf85T2fX3rppWrt2rX687BQLpk3
        LaRN7kXaJiKQaCJ+2O/ZZNrdjBkzygow7/n88ccf1+8HDhyoXyZQLsonCNWJVykkknaRAt0d2JjfZFYH
        IlxOfImizzzzTB1pA2IejLLDQLkonyCkiYi0kCo8QcVkCTgC7ac6eCHGgDgj0r4o8555z75oh4FyUb5o
        kH6ZYIaItJAqPOrKf6JKrZSmNBBo8tMIcWnkbCPSlIvyCUKaiEgL0RMiaCQKtiUo2ohxVJE0RFG+vCJ9
        g2QQDxRSxSSSLsUXaaLoKHPSEknni6zeVESkhfip0jpMctLVhDjK2R3R5qSFykhMXg0RaSFVTGd3IND+
        PGk/H+2DWEcxTzp3szsa0cJsS2V6pY/7yhVFWu5tyeN8ncdQQNN50kkg86QFF8hJJJ2TW0oB74ymKw5D
        Y1C3suKwCgX01VKSqoINIi21LaTFv5nZu2MTpNkICZFSJC0enheisKTsgpc2brRHUYXyyMChkDqkFPR+
        0g7hzH7SiSIy6SKWIi1GFaJBnswiCOVxP5JO8j4g95wGJFkd6T7jsCGlzzgUtxDSRNIdQuqsWrVK/yUH
        nPZ0PK4vT2TJN1m76YpI54GMhnrffvuteuyxx9Tll1+uF6DMnj1bL0CZNWuWd0SycF2uTzliRUJzIQTJ
        iLQ4pRDggw8+UMOHD1enn366Ov/889XIkSPV559/rr9jsK5Vq1ZG25fawPW4rj9YOGjQIPXaa6+pFStW
        6PdCQ6RJJ4dE0kIikNKYPHmy6tu3r2rXrp267rrr1HPPPaeWLFniHfEfCGSbNm0SE2quw/W4LixcuFD1
        799fHXfccercc89Vd999t3r//ffV33//rb8XhCQpEWm7+6PcXYVSvvnmG53SuOyyy9QJJ5ygbrvtNvX2
        22+rdevWeUeUB8Ekso079cH5uY4v0EHmz5+vnnzySXXttdeqww8/XF1xxRXqkUceUV988YV3hCDET0Yi
        aZF/pyljHsTvrrvu0imNrl27qgcffLA+pVGrOUk9kCOOazCR83L+WuZDf/zxxzotc9FFF6n27dur3r17
        q+eff14tWrTIO0LIKq6rS3QiLToaO65X8W+//aZTGn369FFt27ZV119/vRayn376yTsiPAziMduCaXFR
        zaPmPJyP84YdJFyzZo1666231O23365vQKeccoq69dZb1euvv67//4IQNZKTNkbuSj4LFixQjz76qE5p
        nHjiiTWnNMLAvGUWmLAS0HQJOb/j95wnOA/aFG4+EydOVP369dNbozIIeu+996qZM2eqf/75xztKEOwQ
        kRaMIaUxbNgwddppp6lu3bqpUaNGxZ6vJTVBBMzmR+xSR8qCyJjBP/8JL/zlPZ/zPcdxPL+rJbVhwrx5
        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
</value>
  </data>
</root>